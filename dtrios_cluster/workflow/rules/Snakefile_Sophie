
#Dsuite Dtrios SG

import glob

configfile: "config.yaml"

shell.prefix("source /data/antwerpen/grp/asvardal/share/hscon5_setup.sh; ")

################### Global parameters ############################

vcf_dir = config['vcf_dir']
dtrios_dir = config['dtrios_dir']

CHROMOSOMES = [f'chr{i}' for i in range(1,24) if i!= 21]


#####################################################################
###################### dtriosparallel ###############################

#decompress vcf.gz files for analysis
rule unzip:
    input:
        vcfgz = dtrios_dir + "/_data/inputfiles/vcf/Malawicallsetfeb2021.sf_stringent1.pass.snps.biallelic.anc_samp.noninversion.{chrom}.vcf.gz"
    output:
        vcf = dtrios_dir + "/_data/inputfiles/vcf/Malawicallsetfeb2021.sf_stringent1.pass.snps.biallelic.anc_samp.noninversion.{chrom}.vcf"
    shell:
        """
        bgzip -d {input.vcfgz} > {output.vcf}
        """

rule unzip_all:
    input:
        expand(rules.unzip.output.vcf, chrom = CHROMOSOMES)

##############

#DtriosParallel script has been edited so that the combine function is removed
#this combine function was found to have taken up the majority of the run time in test runs and isn't needed here

rule dtrios_parallel_no_final_combine:
    input:
        vcf = dtrios_dir + "/_data/inputfiles/vcf/Malawicallsetfeb2021.sf_stringent1.pass.snps.biallelic.anc_samp.noninversion.{chrom}.vcf",
        sets = dtrios_dir + "/_data/inputfiles/wholegenome_sets_allsamples_newmetahannesdec2021_rmSRR12700905_rmSRR12700906.txt"
    output:
        simname = "sim_wholegenome_dtrios_parallel_{chrom}_allsamples_newmetahannesdec2021_rmSRR12700905_rmSRR12700906_no_final_combine"
    params:
        outbase = lambda wildcards: "sim_wholegenome_dtrios_parallel_{}_allsamples_newmetahannesdec2021_rmSRR12700905_rmSRR12700906_no_final_combine".format(wildcards.chrom)
    resources:
        walltime = 160,
        mem_gb = 240
        #walltime = 336:00:00
    threads: 20
    shell:
        """
        module load GCC;
        python3 ~/Dsuite/utils/DtriosParallel_no_final_combine --keep-intermediate --cores {threads} --dsuite-path ~/Dsuite/Build/ -n {params.outbase} {input.vcf} {input.sets};
        #mv /scratch/antwerpen/grp/asvardal/projects/cichlid/analyses/2019CallsetInvestigation_Sophie/analyses/callsetFeb2021/dsuite/dtrios/_data/inputfiles/wholegenome_sets_allsamples_sim_wholegenome* /scratch/antwerpen/grp/asvardal/projects/cichlid/analyses/2019CallsetInvestigation_Sophie/analyses/callsetFeb2021/dsuite/dtrios/_data/results/dtriosparallel/
        #mv samples after all jobs are finished - if one chr finishes before another then it might also move the unfinished chr with this command
        """

rule dtrios_parallel_no_final_combine_all:
    input:
        expand(rules.dtrios_parallel_no_final_combine.output.simname, chrom = CHROMOSOMES)

#execute with:
#snakemake dtrios_parallel_no_final_combine_all -p --profile qsub_hs_hopper 2>&1 --rerun-incomplete --keep-going | tee ./logfiles/dtrios_parallel_no_final_combine_allsamples_newmetahannesdec2021_rmSRR12700905_rmSRR12700906_hopper_allchrs_wholegenome_10jan2022_chr7.log


#####################################################################################
################### dtriosparallel combine - split files ############################

#split combine file

#make 150 input folders using "mkdir -p {000..149}"
#make sure "split_filenames" folder is created in files directory


#HS: This is dangerous, because you search whatever is in that folder. Don't do that.
def get_chunks(chrom):
    from os import listdir
    from os.path import isfile, join
    import re
    chunks = []
    path = "/scratch/antwerpen/grp/asvardal/projects/cichlid/analyses/2019CallsetInvestigation_Sophie/analyses/callsetFeb2021/dsuite/dtrios/_data/results/dtriosparallel_newmetadatahannesdec2021_rmSRR12700905_rmSRR12700906_07.01.2022/"
    for f in listdir(path):
        if isfile(join(path,f)):
            m = re.search('wholegenome_sets_allsamples_newmetahannesdec2021_rmSRR12700905_rmSRR12700906_sim_wholegenome_dtrios_parallel_{}_allsamples_newmetahannesdec2021_rmSRR12700905_rmSRR12700906_no_final_combine_(.+?)_Dmin.txt'.format(chrom), f)
            if m:
                chunks.append(m.group(1))
    return chunks

rule split_dtrios_files_combine:
    input:
        combinefile = "/scratch/antwerpen/grp/asvardal/projects/cichlid/analyses/2019CallsetInvestigation_Sophie/analyses/callsetFeb2021/dsuite/dtrios/_data/results/dtriosparallel_newmetadatahannesdec2021_rmSRR12700905_rmSRR12700906_07.01.2022/wholegenome_sets_allsamples_newmetahannesdec2021_rmSRR12700905_rmSRR12700906_sim_wholegenome_dtrios_parallel_{chrom}_allsamples_newmetahannesdec2021_rmSRR12700905_rmSRR12700906_no_final_combine_{chunk}_combine.txt"
    output:
        outfile1 = "/scratch/antwerpen/grp/asvardal/projects/cichlid/analyses/2019CallsetInvestigation_Sophie/analyses/callsetFeb2021/dsuite/dtrios/_data/results/dtriosparallel_newmetadatahannesdec2021_rmSRR12700905_rmSRR12700906_07.01.2022/subfiles/001/{chrom}.{chunk}_split_001_combine.txt"
    params:
        prefixoutput = "{chrom}.{chunk}_split_",
        filenames = "{chrom}.{chunk}_split_filenames_combine.txt"
    wildcard_constraints:
        chrom = "\w+",
        chunk = "\d+_\d+"
    shell:
        """
        split --additional-suffix=_combine.txt -a 3 -d -l 33101 {input.combinefile} {params.prefixoutput};
        find {params.prefixoutput}*_combine.txt -type f > ./split_filenames_nov2022/{params.filenames};
        awk -F[-_] '{{print "mv " $0 " /scratch/antwerpen/grp/asvardal/projects/cichlid/analyses/2019CallsetInvestigation_Sophie/analyses/callsetFeb2021/dsuite/dtrios/_data/results/dtriosparallel_newmetadatahannesdec2021_rmSRR12700905_rmSRR12700906_07.01.2022/subfiles/" $4 "/"}}' < ./split_filenames_nov2022/{params.filenames} | sh -v
        """

outfile1 = "/scratch/antwerpen/grp/asvardal/projects/cichlid/analyses/2019CallsetInvestigation_Sophie/analyses/callsetFeb2021/dsuite/dtrios/_data/results/dtriosparallel_newmetadatahannesdec2021_rmSRR12700905_rmSRR12700906_07.01.2022/subfiles/001/{chrom}.{chunk}_split_001_combine.txt"
dtrios_chunks_filenames = []

for chrom in CHROMOSOMES:
    chunks = get_chunks(chrom)
    #print(chunks)
    for chunk in chunks:
        dtrios_chunks_filenames.append(outfile1.format(chrom = chrom, chunk = chunk))
        #print(dtrios_chunks_filenames)

rule split_dtrios_files_combine_all:
    input:
        dtrios_chunks_filenames


#run with
#snakemake split_dtrios_files_combine_all -p --profile slurm-simple3 --rerun-incomplete --keep-going | tee ./logfiles/split_dtrios_files_combine_all_16.11.2022.log



#split combine.stderr files

rule split_dtrios_files_combine_stderr:
    input:
        combinefile = "/scratch/antwerpen/grp/asvardal/projects/cichlid/analyses/2019CallsetInvestigation_Sophie/analyses/callsetFeb2021/dsuite/dtrios/_data/results/dtriosparallel_newmetadatahannesdec2021_rmSRR12700905_rmSRR12700906_07.01.2022/wholegenome_sets_allsamples_newmetahannesdec2021_rmSRR12700905_rmSRR12700906_sim_wholegenome_dtrios_parallel_{chrom}_allsamples_newmetahannesdec2021_rmSRR12700905_rmSRR12700906_no_final_combine_{chunk}_combine_stderr.txt"
    output:
        outfile1 = "/scratch/antwerpen/grp/asvardal/projects/cichlid/analyses/2019CallsetInvestigation_Sophie/analyses/callsetFeb2021/dsuite/dtrios/_data/results/dtriosparallel_newmetadatahannesdec2021_rmSRR12700905_rmSRR12700906_07.01.2022/subfiles/001/{chrom}.{chunk}_split_001_combine_stderr.txt"
    params:
        prefixoutput = "{chrom}.{chunk}_split_",
        filenames = "{chrom}.{chunk}_split_filenames_combinestderr.txt"
    wildcard_constraints:
        chrom = "\w+",
        chunk = "\d+_\d+"
    shell:
        """
        split --additional-suffix=_combine_stderr.txt -a 3 -d -l 33101 {input.combinefile} {params.prefixoutput};
        find {params.prefixoutput}*_combine_stderr.txt -type f > ./split_filenames/{params.filenames};
        awk -F[-_] '{{print "mv " $0 " /scratch/antwerpen/grp/asvardal/projects/cichlid/analyses/2019CallsetInvestigation_Sophie/analyses/callsetFeb2021/dsuite/dtrios/_data/results/dtriosparallel_newmetadatahannesdec2021_rmSRR12700905_rmSRR12700906_07.01.2022/subfiles/" $4 "/"}}' < ./split_filenames/{params.filenames} | sh -v
        """

outfile1_stderr = "/scratch/antwerpen/grp/asvardal/projects/cichlid/analyses/2019CallsetInvestigation_Sophie/analyses/callsetFeb2021/dsuite/dtrios/_data/results/dtriosparallel_newmetadatahannesdec2021_rmSRR12700905_rmSRR12700906_07.01.2022/subfiles/001/{chrom}.{chunk}_split_001_combine_stderr.txt"
dtrios_chunks_filenames_stderr = []

for chrom in CHROMOSOMES:
    chunks = get_chunks(chrom)
    #print(chunks)
    for chunk in chunks:
        dtrios_chunks_filenames_stderr.append(outfile1_stderr.format(chrom = chrom, chunk = chunk))
        #print(dtrios_chunks_filenames_stderr)

rule split_dtrios_files_combine_stderr_all:
    input:
        dtrios_chunks_filenames_stderr


#####################################################################
#################### combine split files ############################

#combine files based on their new suffix number (00,01,02 etc) 

#get all input files (all chunks and chromosomes) for each trio group (00,01,02 etc) 
def get_combine_input(wildcards):
    triosfolder = wildcards.triosfolder
    files = glob.glob("/scratch/antwerpen/grp/asvardal/projects/cichlid/analyses/2019CallsetInvestigation_Sophie/analyses/callsetFeb2021/dsuite/dtrios/_data/results/dtriosparallel_newmetadatahannesdec2021_rmSRR12700905_rmSRR12700906_07.01.2022/subfiles/{}/*_combine.txt".format(triosfolder))
    #print(files)
    return files

#remove the suffix 
def get_input_base(wildcards, input):
    filenames = input.combine
    filebases = []
    for fn in filenames:
        filebases.append(fn.rsplit("_",1)[0])
    #print(filebases)
    return filebases


triosfolder_list = list(set(["%.3d" % i for i in range(150)]) - set(["%.3d" % i for i in range(10)]))


rule dtrios_combine_split:
    input:
        combine = get_combine_input
    output:
        outfile = "out_sim_wholegenome_dtrios_parallel_allchroms_allsamples_newmetahannesdec2021_rmSRR12700905_rmSRR12700906_combined_split_{triosfolder}_combined_BBAA.txt"
    params:
        prefix = "sim_wholegenome_dtrios_parallel_allchroms_allsamples_newmetahannesdec2021_rmSRR12700905_rmSRR12700906_combined_split_{triosfolder}",
        inputbase = get_input_base
    resources:
        walltime = 168
    shell:
        """
        module load GCC;
        ~/Dsuite/Build/Dsuite DtriosCombine --run-name {params.prefix} {params.inputbase}
        """

rule dtrios_combine_split_all:
    input: expand(f"out_sim_wholegenome_dtrios_parallel_allchroms_allsamples_newmetahannesdec2021_rmSRR12700905_rmSRR12700906_combined_split_{{triosfolder}}_combined_BBAA.txt", triosfolder = triosfolder_list)

#execute with:
#snakemake dtrios_combine_split_all -p --profile slurm-simple3 --rerun-incomplete --keep-going | tee ./logfiles/dtrios_combine_split_all_allsamples_newmetahannesdec2021_rmSRR12700905_rmSRR12700906_biomina_allchrs_wholegenome_02oct2022_restfiles.log
#remove split files and split_filenames/files after this analysis is done






